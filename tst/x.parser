
file parser          : [0x0000564ef1aff7d0] -> [tst/x.parser        ]

# Parser  -> scanning ...

-[tst/x.pas           ][002,004] len(05) sym(109) [               array]
parserDeclConst
parserDeclVar
parserDeclArray
-[tst/x.pas           ][002,010] len(02) sym(004) [                  a1]
-[tst/x.pas           ][002,013] len(01) sym(155) [                   :]
-[tst/x.pas           ][002,015] len(01) sym(156) [                   []
-[tst/x.pas           ][002,016] len(02) sym(005) [                  10] -> [[10]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_integer                    :: [10].
-[tst/x.pas           ][002,018] len(01) sym(157) [                   ]]
parserDot END
-[tst/x.pas           ][002,019] len(01) sym(156) [                   []
-[tst/x.pas           ][002,020] len(02) sym(005) [                  20] -> [[20]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_integer                    :: [20].
-[tst/x.pas           ][002,022] len(01) sym(157) [                   ]]
parserDot END
-[tst/x.pas           ][002,024] len(04) sym(108) [                byte]
-[tst/x.pas           ][002,029] len(01) sym(153) [                   ;]
-[tst/x.pas           ][004,004] len(05) sym(103) [               const]
parserDeclConst
-[tst/x.pas           ][004,010] len(02) sym(004) [                  c1]
-[tst/x.pas           ][004,013] len(01) sym(258) [                   =]
-[tst/x.pas           ][004,015] len(06) sym(003) [               "str"] -> [[str]]
-[tst/x.pas           ][004,021] len(01) sym(153) [                   ;]
-[tst/x.pas           ][007,004] len(03) sym(104) [                 var]
parserDeclVar
-[tst/x.pas           ][007,008] len(02) sym(004) [                  v1]
-[tst/x.pas           ][007,011] len(01) sym(155) [                   :]
-[tst/x.pas           ][007,013] len(07) sym(105) [             integer]
-[tst/x.pas           ][007,021] len(02) sym(201) [                  :=]
-[tst/x.pas           ][007,024] len(03) sym(005) [                 100] -> [[100]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_integer                    :: [100].
-[tst/x.pas           ][007,028] len(01) sym(153) [                   ;]
parserDot END
-[tst/x.pas           ][009,004] len(04) sym(110) [                type]
parserDeclArray
-[tst/x.pas           ][009,009] len(07) sym(004) [             point_t]
-[tst/x.pas           ][010,004] len(01) sym(158) [                   {]
-[tst/x.pas           ][011,008] len(03) sym(104) [                 var]
parserDeclVar
-[tst/x.pas           ][011,016] len(01) sym(004) [                   x]
-[tst/x.pas           ][011,018] len(01) sym(155) [                   :]
-[tst/x.pas           ][011,020] len(07) sym(105) [             integer]
-[tst/x.pas           ][011,028] len(01) sym(153) [                   ;]
-[tst/x.pas           ][012,008] len(03) sym(104) [                 var]
parserDeclArray
parserDeclVar
-[tst/x.pas           ][012,016] len(01) sym(004) [                   y]
-[tst/x.pas           ][012,018] len(01) sym(155) [                   :]
-[tst/x.pas           ][012,020] len(07) sym(105) [             integer]
-[tst/x.pas           ][012,028] len(01) sym(153) [                   ;]
-[tst/x.pas           ][013,004] len(01) sym(159) [                   }]
parserDeclArray
parserDeclVar
parserDeclArray
-[tst/x.pas           ][013,006] len(01) sym(153) [                   ;]
-[tst/x.pas           ][015,004] len(04) sym(110) [                type]
parserDeclConst
parserDeclVar
parserDeclArray
-[tst/x.pas           ][015,009] len(06) sym(004) [              line_t]
-[tst/x.pas           ][016,004] len(01) sym(158) [                   {]
-[tst/x.pas           ][017,008] len(03) sym(104) [                 var]
parserDeclVar
-[tst/x.pas           ][017,016] len(05) sym(004) [               start]
-[tst/x.pas           ][017,022] len(01) sym(155) [                   :]
-[tst/x.pas           ][017,024] len(07) sym(004) [             point_t]
-[tst/x.pas           ][017,032] len(01) sym(153) [                   ;]
-[tst/x.pas           ][018,008] len(03) sym(104) [                 var]
parserDeclArray
parserDeclVar
-[tst/x.pas           ][018,016] len(04) sym(004) [                stop]
-[tst/x.pas           ][018,022] len(01) sym(155) [                   :]
-[tst/x.pas           ][018,024] len(07) sym(004) [             point_t]
-[tst/x.pas           ][018,032] len(01) sym(153) [                   ;]
-[tst/x.pas           ][019,004] len(01) sym(159) [                   }]
parserDeclArray
parserDeclVar
parserDeclArray
-[tst/x.pas           ][019,006] len(01) sym(153) [                   ;]
-[tst/x.pas           ][020,004] len(04) sym(110) [                type]
parserDeclConst
parserDeclVar
parserDeclArray
-[tst/x.pas           ][020,009] len(06) sym(004) [              rect_t]
-[tst/x.pas           ][021,004] len(01) sym(158) [                   {]
-[tst/x.pas           ][022,008] len(03) sym(104) [                 var]
parserDeclVar
-[tst/x.pas           ][022,016] len(02) sym(004) [                  l1]
-[tst/x.pas           ][022,019] len(01) sym(155) [                   :]
-[tst/x.pas           ][022,021] len(06) sym(004) [              line_t]
-[tst/x.pas           ][022,028] len(01) sym(153) [                   ;]
-[tst/x.pas           ][023,008] len(03) sym(104) [                 var]
parserDeclArray
parserDeclVar
-[tst/x.pas           ][023,016] len(02) sym(004) [                  l2]
-[tst/x.pas           ][023,020] len(01) sym(155) [                   :]
-[tst/x.pas           ][023,022] len(06) sym(004) [              line_t]
-[tst/x.pas           ][023,029] len(01) sym(153) [                   ;]
-[tst/x.pas           ][024,004] len(01) sym(159) [                   }]
parserDeclArray
parserDeclVar
parserDeclArray
-[tst/x.pas           ][024,006] len(01) sym(153) [                   ;]
-[tst/x.pas           ][027,004] len(03) sym(104) [                 var]
parserDeclConst
parserDeclVar
-[tst/x.pas           ][027,008] len(02) sym(004) [                  v2]
-[tst/x.pas           ][027,011] len(01) sym(155) [                   :]
-[tst/x.pas           ][027,013] len(07) sym(004) [             point_t]
-[tst/x.pas           ][027,021] len(01) sym(153) [                   ;]
-[tst/x.pas           ][029,004] len(05) sym(109) [               array]
parserDeclArray
-[tst/x.pas           ][029,010] len(05) sym(004) [               linea]
-[tst/x.pas           ][029,016] len(01) sym(155) [                   :]
-[tst/x.pas           ][029,018] len(01) sym(156) [                   []
-[tst/x.pas           ][029,019] len(02) sym(005) [                  20] -> [[20]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_integer                    :: [20].
-[tst/x.pas           ][029,021] len(01) sym(157) [                   ]]
parserDot END
-[tst/x.pas           ][029,023] len(06) sym(004) [              line_t]
-[tst/x.pas           ][029,030] len(01) sym(153) [                   ;]
-[tst/x.pas           ][031,004] len(05) sym(103) [               const]
parserDeclConst
-[tst/x.pas           ][031,012] len(02) sym(004) [                  c2]
-[tst/x.pas           ][031,015] len(01) sym(258) [                   =]
-[tst/x.pas           ][031,017] len(07) sym(003) [              "a\nb"] -> [[aNb]]
-[tst/x.pas           ][031,024] len(01) sym(154) [                   ,]
-[tst/x.pas           ][032,004] len(02) sym(004) [                  c3]
-[tst/x.pas           ][032,007] len(01) sym(258) [                   =]
-[tst/x.pas           ][032,009] len(04) sym(002) [                '\n'] -> [[N]]
-[tst/x.pas           ][032,013] len(01) sym(153) [                   ;]
-[tst/x.pas           ][034,004] len(05) sym(103) [               const]
parserDeclVar
parserDeclArray
parserDeclConst
-[tst/x.pas           ][034,010] len(03) sym(004) [                 ccc]
-[tst/x.pas           ][034,014] len(01) sym(258) [                   =]
-[tst/x.pas           ][034,016] len(03) sym(005) [                 123] -> [[123]]
-[tst/x.pas           ][034,020] len(01) sym(153) [                   ;]
-[tst/x.pas           ][036,004] len(05) sym(103) [               const]
parserDeclVar
parserDeclArray
parserDeclConst
-[tst/x.pas           ][036,011] len(02) sym(004) [                  c4]
-[tst/x.pas           ][036,014] len(01) sym(258) [                   =]
-[tst/x.pas           ][036,016] len(03) sym(002) [                 'c'] -> [[c]]
-[tst/x.pas           ][036,020] len(01) sym(153) [                   ;]
-[tst/x.pas           ][038,004] len(03) sym(104) [                 var]
parserDeclVar
-[tst/x.pas           ][038,008] len(02) sym(004) [                  v3]
-[tst/x.pas           ][038,011] len(01) sym(155) [                   :]
-[tst/x.pas           ][038,013] len(04) sym(106) [                real]
-[tst/x.pas           ][038,018] len(02) sym(201) [                  :=]
-[tst/x.pas           ][038,021] len(05) sym(006) [               12.34] -> [[12.340000]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_real                       :: [12.340000].
-[tst/x.pas           ][038,027] len(01) sym(154) [                   ,]
parserDot END
-[tst/x.pas           ][038,029] len(02) sym(004) [                  v4]
-[tst/x.pas           ][038,032] len(01) sym(155) [                   :]
-[tst/x.pas           ][038,034] len(04) sym(107) [                char]
-[tst/x.pas           ][038,039] len(02) sym(201) [                  :=]
-[tst/x.pas           ][038,042] len(03) sym(002) [                 'x'] -> [[x]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_char                       :: [x].
-[tst/x.pas           ][038,046] len(01) sym(153) [                   ;]
parserDot END
-[tst/x.pas           ][040,004] len(03) sym(104) [                 var]
parserDeclArray
parserDeclConst
parserDeclVar
-[tst/x.pas           ][040,008] len(02) sym(004) [                  v5]
-[tst/x.pas           ][040,011] len(01) sym(155) [                   :]
-[tst/x.pas           ][040,013] len(04) sym(107) [                char]
-[tst/x.pas           ][040,018] len(02) sym(201) [                  :=]
-[tst/x.pas           ][040,021] len(10) sym(003) [           "stringa"] -> [[stringa]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_string                     :: [stringa].
-[tst/x.pas           ][040,031] len(01) sym(153) [                   ;]
parserDot END
-[tst/x.pas           ][043,004] len(03) sym(104) [                 var]
parserDeclArray
parserDeclConst
parserDeclVar
-[tst/x.pas           ][043,008] len(02) sym(004) [                  v6]
-[tst/x.pas           ][043,011] len(01) sym(155) [                   :]
-[tst/x.pas           ][043,013] len(04) sym(108) [                byte]
-[tst/x.pas           ][043,018] len(02) sym(201) [                  :=]
-[tst/x.pas           ][043,021] len(10) sym(005) [          0b00000101] -> [[5]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_integer                    :: [5].
-[tst/x.pas           ][043,032] len(01) sym(153) [                   ;]
parserDot END
-[tst/x.pas           ][046,004] len(03) sym(104) [                 var]
parserDeclArray
parserDeclConst
parserDeclVar
-[tst/x.pas           ][046,012] len(02) sym(004) [                  p1]
-[tst/x.pas           ][046,015] len(01) sym(155) [                   :]
-[tst/x.pas           ][046,017] len(07) sym(004) [             point_t]
-[tst/x.pas           ][046,025] len(01) sym(153) [                   ;]
-[tst/x.pas           ][047,004] len(03) sym(104) [                 var]
parserDeclArray
parserDeclConst
parserDeclVar
-[tst/x.pas           ][047,012] len(02) sym(004) [                  l1]
-[tst/x.pas           ][047,015] len(01) sym(155) [                   :]
-[tst/x.pas           ][047,017] len(06) sym(004) [              line_t]
-[tst/x.pas           ][047,024] len(01) sym(153) [                   ;]
-[tst/x.pas           ][048,004] len(03) sym(104) [                 var]
parserDeclArray
parserDeclConst
parserDeclVar
-[tst/x.pas           ][048,012] len(02) sym(004) [                  r1]
-[tst/x.pas           ][048,015] len(01) sym(155) [                   :]
-[tst/x.pas           ][048,017] len(06) sym(004) [              rect_t]
-[tst/x.pas           ][048,024] len(01) sym(153) [                   ;]
-[tst/x.pas           ][050,004] len(08) sym(111) [            function]
parserDeclArray
parserDeclConst
parserDeclVar
parserDeclArray
-[tst/x.pas           ][050,013] len(02) sym(004) [                  f1]
-[tst/x.pas           ][051,004] len(01) sym(151) [                   (]
-[tst/x.pas           ][052,008] len(03) sym(104) [                 var]
parserDeclVar
-[tst/x.pas           ][052,012] len(05) sym(004) [               f1_v7]
-[tst/x.pas           ][052,018] len(01) sym(155) [                   :]
-[tst/x.pas           ][052,020] len(07) sym(105) [             integer]
-[tst/x.pas           ][052,028] len(01) sym(154) [                   ,]
-[tst/x.pas           ][052,030] len(05) sym(004) [               f1_v8]
-[tst/x.pas           ][052,036] len(01) sym(155) [                   :]
-[tst/x.pas           ][052,038] len(07) sym(105) [             integer]
-[tst/x.pas           ][052,046] len(01) sym(153) [                   ;]
-[tst/x.pas           ][053,008] len(05) sym(109) [               array]
parserDeclArray
-[tst/x.pas           ][053,014] len(01) sym(004) [                   a]
-[tst/x.pas           ][053,017] len(01) sym(155) [                   :]
-[tst/x.pas           ][053,018] len(01) sym(156) [                   []
-[tst/x.pas           ][053,019] len(02) sym(005) [                  10] -> [[10]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_integer                    :: [10].
-[tst/x.pas           ][053,021] len(01) sym(157) [                   ]]
parserDot END
-[tst/x.pas           ][053,023] len(07) sym(004) [             point_t]
-[tst/x.pas           ][053,031] len(01) sym(153) [                   ;]
-[tst/x.pas           ][054,004] len(01) sym(152) [                   )]
parserDeclVar
parserDeclArray
-[tst/x.pas           ][054,006] len(07) sym(105) [             integer]
-[tst/x.pas           ][056,004] len(01) sym(158) [                   {]
-[tst/x.pas           ][059,008] len(03) sym(104) [                 var]
parserDeclConst
parserDeclVar
-[tst/x.pas           ][059,012] len(03) sym(004) [                 VVV]
-[tst/x.pas           ][059,016] len(01) sym(155) [                   :]
-[tst/x.pas           ][059,018] len(07) sym(004) [             point_t]
-[tst/x.pas           ][059,026] len(01) sym(153) [                   ;]
-[tst/x.pas           ][061,008] len(01) sym(005) [                   8] -> [[8]]
parserDeclArray
parserDeclConst
parserDeclVar
parserDeclArray
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_integer                    :: [8].
-[tst/x.pas           ][061,010] len(01) sym(153) [                   ;]
parserDot END
-[tst/x.pas           ][062,008] len(01) sym(005) [                   9] -> [[9]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_integer                    :: [9].
-[tst/x.pas           ][062,010] len(01) sym(153) [                   ;]
parserDot END
-[tst/x.pas           ][063,008] len(03) sym(004) [                 VVV]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
ID                             :: [VVV].
-[tst/x.pas           ][063,012] len(01) sym(257) [                   .]
parserDot LOOP
-[tst/x.pas           ][063,014] len(01) sym(004) [                   y]
parserTerm
ID                             :: [y].
-[tst/x.pas           ][063,015] len(01) sym(153) [                   ;]
-[tst/x.pas           ][065,004] len(01) sym(159) [                   }]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
parserDot END
-[tst/x.pas           ][065,006] len(01) sym(153) [                   ;]
-[tst/x.pas           ][068,004] len(01) sym(005) [                   1] -> [[1]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_integer                    :: [1].
-[tst/x.pas           ][068,006] len(01) sym(153) [                   ;]
parserDot END
-[tst/x.pas           ][071,004] len(01) sym(251) [                   !]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserPrefix push [251]
-[tst/x.pas           ][071,006] len(03) sym(005) [                 123] -> [[123]]
parserTerm
sym_integer                    :: [123].
-[tst/x.pas           ][071,010] len(01) sym(153) [                   ;]
parserPrefix pop [153]
parserDot END
-[tst/x.pas           ][072,004] len(03) sym(005) [                 456] -> [[456]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_integer                    :: [456].
-[tst/x.pas           ][072,008] len(01) sym(153) [                   ;]
parserDot END
-[tst/x.pas           ][074,004] len(10) sym(003) [           "claudio"] -> [[claudio]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_string                     :: [claudio].
-[tst/x.pas           ][074,014] len(01) sym(153) [                   ;]
parserDot END
-[tst/x.pas           ][074,016] len(01) sym(005) [                   1] -> [[1]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_integer                    :: [1].
-[tst/x.pas           ][074,018] len(01) sym(153) [                   ;]
parserDot END
-[tst/x.pas           ][074,021] len(02) sym(003) [                  ""] -> [[]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_string                     :: [].
-[tst/x.pas           ][074,024] len(01) sym(153) [                   ;]
parserDot END
-[tst/x.pas           ][074,026] len(02) sym(005) [                  42] -> [[42]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_integer                    :: [42].
-[tst/x.pas           ][074,029] len(01) sym(153) [                   ;]
parserDot END
-[tst/x.pas           ][074,030] len(01) sym(005) [                   3] -> [[3]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_integer                    :: [3].
-[tst/x.pas           ][074,032] len(01) sym(153) [                   ;]
parserDot END
-[tst/x.pas           ][076,004] len(03) sym(004) [                 arr]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
ID                             :: [arr].
-[tst/x.pas           ][076,007] len(01) sym(156) [                   []
-[tst/x.pas           ][076,008] len(02) sym(005) [                  11] -> [[11]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_integer                    :: [11].
-[tst/x.pas           ][076,010] len(01) sym(157) [                   ]]
parserDot END
-[tst/x.pas           ][076,011] len(01) sym(156) [                   []
-[tst/x.pas           ][076,012] len(02) sym(005) [                  12] -> [[12]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_integer                    :: [12].
-[tst/x.pas           ][076,014] len(01) sym(157) [                   ]]
parserDot END
-[tst/x.pas           ][076,016] len(01) sym(153) [                   ;]
parserDot END
-[tst/x.pas           ][078,004] len(02) sym(004) [                  f1]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
ID                             :: [f1].
-[tst/x.pas           ][078,006] len(01) sym(151) [                   (]
-[tst/x.pas           ][078,007] len(03) sym(005) [                 100] -> [[100]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_integer                    :: [100].
-[tst/x.pas           ][078,012] len(01) sym(154) [                   ,]
parserDot END
-[tst/x.pas           ][078,016] len(01) sym(004) [                   x]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
ID                             :: [x].
-[tst/x.pas           ][078,017] len(01) sym(156) [                   []
-[tst/x.pas           ][078,018] len(02) sym(005) [                  21] -> [[21]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_integer                    :: [21].
-[tst/x.pas           ][078,020] len(01) sym(254) [                   *]
parserDot END
-[tst/x.pas           ][078,021] len(01) sym(005) [                   2] -> [[2]]
parserDot BEGIN
parserTerm
sym_integer                    :: [2].
-[tst/x.pas           ][078,022] len(01) sym(157) [                   ]]
parserDot END
-[tst/x.pas           ][078,023] len(01) sym(156) [                   []
-[tst/x.pas           ][078,024] len(01) sym(253) [                   -]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserPrefix push [253]
-[tst/x.pas           ][078,025] len(01) sym(005) [                   4] -> [[4]]
parserTerm
sym_integer                    :: [4].
-[tst/x.pas           ][078,026] len(01) sym(157) [                   ]]
parserPrefix pop [157]
parserDot END
-[tst/x.pas           ][078,028] len(01) sym(154) [                   ,]
parserDot END
-[tst/x.pas           ][078,032] len(03) sym(005) [                 300] -> [[300]]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
sym_integer                    :: [300].
-[tst/x.pas           ][078,036] len(01) sym(152) [                   )]
parserDot END
-[tst/x.pas           ][078,037] len(01) sym(153) [                   ;]
parserDot END
-[tst/x.pas           ][083,004] len(03) sym(004) [                 ccc]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
ID                             :: [ccc].
-[tst/x.pas           ][083,008] len(01) sym(153) [                   ;]
parserDot END
-[tst/x.pas           ][092,004] len(02) sym(004) [                  r1]
parserExpr
parserAssign
parserAddSub
parserMulDivMod
parserDot BEGIN
parserTerm
ID                             :: [r1].
-[tst/x.pas           ][092,007] len(01) sym(257) [                   .]
parserDot LOOP
-[tst/x.pas           ][092,009] len(02) sym(004) [                  l2]
parserTerm
ID                             :: [l2].
-[tst/x.pas           ][092,012] len(01) sym(257) [                   .]
-[tst/x.pas           ][092,014] len(05) sym(004) [               start]
parserTerm
ID                             :: [start].
-[tst/x.pas           ][092,020] len(01) sym(257) [                   .]
-[tst/x.pas           ][092,022] len(01) sym(004) [                   x]
parserTerm
ID                             :: [x].
-[tst/x.pas           ][092,024] len(01) sym(153) [                   ;]
